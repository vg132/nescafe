using System.Drawing;

namespace Nescafe.Core;

public static class Palette
{
	private static readonly Color[] _palette = new[]
	{
		Color.FromArgb(84, 84, 84),
		Color.FromArgb(0, 30, 116),
		Color.FromArgb(8, 16, 144),
		Color.FromArgb(48, 0, 136),
		Color.FromArgb(68, 0, 100),
		Color.FromArgb(92, 0, 48),
		Color.FromArgb(84, 4, 0),
		Color.FromArgb(60, 24, 0),
		Color.FromArgb(32, 42, 0),
		Color.FromArgb(8, 58, 0),
		Color.FromArgb(0, 64, 0),
		Color.FromArgb(0, 60, 0),
		Color.FromArgb(0, 50, 60),
		Color.FromArgb(0, 0, 0),
		Color.FromArgb(0, 0, 0),
		Color.FromArgb(0, 0, 0),
		Color.FromArgb(152, 150, 152),
		Color.FromArgb(8, 76, 196),
		Color.FromArgb(48, 50, 236),
		Color.FromArgb(92, 30, 228),
		Color.FromArgb(136, 20, 176),
		Color.FromArgb(160, 20, 100),
		Color.FromArgb(152, 34, 32),
		Color.FromArgb(120, 60, 0),
		Color.FromArgb(84, 90, 0),
		Color.FromArgb(40, 114, 0),
		Color.FromArgb(8, 124, 0),
		Color.FromArgb(0, 118, 40),
		Color.FromArgb(0, 102, 120),
		Color.FromArgb(0, 0, 0),
		Color.FromArgb(0, 0, 0),
		Color.FromArgb(0, 0, 0),
		Color.FromArgb(236, 238, 236),
		Color.FromArgb(76, 154, 236),
		Color.FromArgb(120, 124, 236),
		Color.FromArgb(176, 98, 236),
		Color.FromArgb(228, 84, 236),
		Color.FromArgb(236, 88, 180),
		Color.FromArgb(236, 106, 100),
		Color.FromArgb(212, 136, 32),
		Color.FromArgb(160, 170, 0),
		Color.FromArgb(116, 196, 0),
		Color.FromArgb(76, 208, 32),
		Color.FromArgb(56, 204, 108),
		Color.FromArgb(56, 180, 204),
		Color.FromArgb(60, 60, 60),
		Color.FromArgb(0, 0, 0),
		Color.FromArgb(0, 0, 0),
		Color.FromArgb(236, 238, 236),
		Color.FromArgb(168, 204, 236),
		Color.FromArgb(188, 188, 236),
		Color.FromArgb(212, 178, 236),
		Color.FromArgb(236, 174, 236),
		Color.FromArgb(236, 174, 212),
		Color.FromArgb(236, 180, 176),
		Color.FromArgb(228, 196, 144),
		Color.FromArgb(204, 210, 120),
		Color.FromArgb(180, 222, 120),
		Color.FromArgb(168, 226, 144),
		Color.FromArgb(152, 226, 180),
		Color.FromArgb(160, 214, 228),
		Color.FromArgb(160, 162, 160),
		Color.FromArgb(0, 0, 0),
		Color.FromArgb(0, 0, 0)
	};

	private static readonly Color[] _alternativePalette = {
		Color.FromArgb(124, 124, 124),
		Color.FromArgb(0, 0, 252),
		Color.FromArgb(0, 0, 188),
		Color.FromArgb(68, 40, 188),
		Color.FromArgb(148, 0, 132),
		Color.FromArgb(168, 0, 32),
		Color.FromArgb(168, 16, 0),
		Color.FromArgb(136, 20, 0),
		Color.FromArgb(80, 48, 0),
		Color.FromArgb(0, 120, 0),
		Color.FromArgb(0, 104, 0),
		Color.FromArgb(0, 88, 0),
		Color.FromArgb(0, 64, 88),
		Color.FromArgb(0, 0, 0),
		Color.FromArgb(0, 0, 0),
		Color.FromArgb(0, 0, 0),
		Color.FromArgb(188, 188, 188),
		Color.FromArgb(0, 120, 248),
		Color.FromArgb(0, 88, 248),
		Color.FromArgb(104, 68, 252),
		Color.FromArgb(216, 0, 204),
		Color.FromArgb(228, 0, 88),
		Color.FromArgb(248, 56, 0),
		Color.FromArgb(228, 92, 16),
		Color.FromArgb(172, 124, 0),
		Color.FromArgb(0, 184, 0),
		Color.FromArgb(0, 168, 0),
		Color.FromArgb(0, 168, 68),
		Color.FromArgb(0, 136, 136),
		Color.FromArgb(0, 0, 0),
		Color.FromArgb(0, 0, 0),
		Color.FromArgb(0, 0, 0),
		Color.FromArgb(248, 248, 248),
		Color.FromArgb(60, 188, 252),
		Color.FromArgb(104, 136, 252),
		Color.FromArgb(152, 120, 248),
		Color.FromArgb(248, 120, 248),
		Color.FromArgb(248, 88, 152),
		Color.FromArgb(248, 120, 88),
		Color.FromArgb(252, 160, 68),
		Color.FromArgb(248, 184, 0),
		Color.FromArgb(184, 248, 24),
		Color.FromArgb(88, 216, 84),
		Color.FromArgb(88, 248, 152),
		Color.FromArgb(0, 232, 216),
		Color.FromArgb(120, 120, 120),
		Color.FromArgb(0, 0, 0),
		Color.FromArgb(0, 0, 0),
		Color.FromArgb(252, 252, 252),
		Color.FromArgb(164, 228, 252),
		Color.FromArgb(184, 184, 248),
		Color.FromArgb(216, 184, 248),
		Color.FromArgb(248, 184, 248),
		Color.FromArgb(248, 164, 192),
		Color.FromArgb(240, 208, 176),
		Color.FromArgb(252, 224, 168),
		Color.FromArgb(248, 216, 120),
		Color.FromArgb(216, 248, 120),
		Color.FromArgb(184, 248, 184),
		Color.FromArgb(184, 248, 216),
		Color.FromArgb(0, 252, 252),
		Color.FromArgb(248, 216, 248),
		Color.FromArgb(0, 0, 0),
		Color.FromArgb(0, 0, 0)
	};

	public static Color GetColor(int index) => _palette.Length < index ? _palette.Last() : _palette[index];
	//public static Color GetColor(int index) => _alternativePalette[index];
}
